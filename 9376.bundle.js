"use strict";(self.webpackChunkpylinac_yaml_editor=self.webpackChunkpylinac_yaml_editor||[]).push([[9376],{2802:(t,e,n)=>{n.d(e,{$l:()=>o,Gs:()=>d,MB:()=>u,Sw:()=>i,bb:()=>l,gN:()=>s,pJ:()=>c});var r=n(3946);const f="undefined"!=typeof Buffer;let a;new r.d((()=>new Uint8Array(256)));class u{static wrap(t){return f&&!Buffer.isBuffer(t)&&(t=Buffer.from(t.buffer,t.byteOffset,t.byteLength)),new u(t)}constructor(t){this.buffer=t,this.byteLength=this.buffer.byteLength}toString(){return f?this.buffer.toString():(a||(a=new TextDecoder),a.decode(this.buffer))}}function o(t,e){return(0|t[e+0])>>>0|t[e+1]<<8>>>0}function s(t,e,n){t[n+0]=255&e,e>>>=8,t[n+1]=255&e}function l(t,e){return t[e]*2**24+65536*t[e+1]+256*t[e+2]+t[e+3]}function i(t,e,n){t[n+3]=e,e>>>=8,t[n+2]=e,e>>>=8,t[n+1]=e,e>>>=8,t[n]=e}function c(t,e){return t[e]}function d(t,e,n){t[n]=e}},9376:(t,e,n)=>{n.r(e),n.d(e,{encodeSemanticTokensDto:()=>a});var r=n(2802),f=n(3339);function a(t){const e=new Uint32Array(function(t){let e=0;if(e+=2,"full"===t.type)e+=1+t.data.length;else{e+=1,e+=3*t.deltas.length;for(const n of t.deltas)n.data&&(e+=n.data.length)}return e}(t));let n=0;if(e[n++]=t.id,"full"===t.type)e[n++]=1,e[n++]=t.data.length,e.set(t.data,n),n+=t.data.length;else{e[n++]=2,e[n++]=t.deltas.length;for(const r of t.deltas)e[n++]=r.start,e[n++]=r.deleteCount,r.data?(e[n++]=r.data.length,e.set(r.data,n),n+=r.data.length):e[n++]=0}return function(t){const e=new Uint8Array(t.buffer,t.byteOffset,4*t.length);return f.cm()||function(t){for(let e=0,n=t.length;e<n;e+=4){const n=t[e+0],r=t[e+1],f=t[e+2],a=t[e+3];t[e+0]=a,t[e+1]=f,t[e+2]=r,t[e+3]=n}}(e),r.MB.wrap(e)}(e)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWJnQyxFQUFJUixRQUtoRSxPQUpLLFFBZlQsU0FBMkJRLEdBQ3ZCLElBQUssSUFBSUUsRUFBSSxFQUFHQyxFQUFNSCxFQUFJUixPQUFRVSxFQUFJQyxFQUFLRCxHQUFLLEVBQUcsQ0FFL0MsTUFBTUUsRUFBS0osRUFBSUUsRUFBSSxHQUNiRyxFQUFLTCxFQUFJRSxFQUFJLEdBQ2JJLEVBQUtOLEVBQUlFLEVBQUksR0FDYkssRUFBS1AsRUFBSUUsRUFBSSxHQUNuQkYsRUFBSUUsRUFBSSxHQUFLSyxFQUNiUCxFQUFJRSxFQUFJLEdBQUtJLEVBQ2JOLEVBQUlFLEVBQUksR0FBS0csRUFDYkwsRUFBSUUsRUFBSSxHQUFLRSxDQUNqQixDQUNKLENBS1FJLENBQWtCUCxHQUVmLEtBQVN0QyxLQUFLc0MsRUFDekIsQ0EyQldRLENBQXFCdEIsRUFDaEMsQyIsInNvdXJjZXMiOlsid2VicGFjazovL3B5bGluYWMteWFtbC1lZGl0b3IvLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzZS9jb21tb24vYnVmZmVyLmpzIiwid2VicGFjazovL3B5bGluYWMteWFtbC1lZGl0b3IvLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvZWRpdG9yL2NvbW1vbi9zZXJ2aWNlcy9zZW1hbnRpY1Rva2Vuc0R0by5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmltcG9ydCB7IExhenkgfSBmcm9tICcuL2xhenkuanMnO1xuY29uc3QgaGFzQnVmZmVyID0gKHR5cGVvZiBCdWZmZXIgIT09ICd1bmRlZmluZWQnKTtcbmNvbnN0IGluZGV4T2ZUYWJsZSA9IG5ldyBMYXp5KCgpID0+IG5ldyBVaW50OEFycmF5KDI1NikpO1xubGV0IHRleHREZWNvZGVyO1xuZXhwb3J0IGNsYXNzIFZTQnVmZmVyIHtcbiAgICAvKipcbiAgICAgKiBXaGVuIHJ1bm5pbmcgaW4gYSBub2RlanMgY29udGV4dCwgaWYgYGFjdHVhbGAgaXMgbm90IGEgbm9kZWpzIEJ1ZmZlciwgdGhlIGJhY2tpbmcgc3RvcmUgZm9yXG4gICAgICogdGhlIHJldHVybmVkIGBWU0J1ZmZlcmAgaW5zdGFuY2UgbWlnaHQgdXNlIGEgbm9kZWpzIEJ1ZmZlciBhbGxvY2F0ZWQgZnJvbSBub2RlJ3MgQnVmZmVyIHBvb2wsXG4gICAgICogd2hpY2ggaXMgbm90IHRyYW5zZmVycmFibGUuXG4gICAgICovXG4gICAgc3RhdGljIHdyYXAoYWN0dWFsKSB7XG4gICAgICAgIGlmIChoYXNCdWZmZXIgJiYgIShCdWZmZXIuaXNCdWZmZXIoYWN0dWFsKSkpIHtcbiAgICAgICAgICAgIC8vIGh0dHBzOi8vbm9kZWpzLm9yZy9kaXN0L2xhdGVzdC12MTAueC9kb2NzL2FwaS9idWZmZXIuaHRtbCNidWZmZXJfY2xhc3NfbWV0aG9kX2J1ZmZlcl9mcm9tX2FycmF5YnVmZmVyX2J5dGVvZmZzZXRfbGVuZ3RoXG4gICAgICAgICAgICAvLyBDcmVhdGUgYSB6ZXJvLWNvcHkgQnVmZmVyIHdyYXBwZXIgYXJvdW5kIHRoZSBBcnJheUJ1ZmZlciBwb2ludGVkIHRvIGJ5IHRoZSBVaW50OEFycmF5XG4gICAgICAgICAgICBhY3R1YWwgPSBCdWZmZXIuZnJvbShhY3R1YWwuYnVmZmVyLCBhY3R1YWwuYnl0ZU9mZnNldCwgYWN0dWFsLmJ5dGVMZW5ndGgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgVlNCdWZmZXIoYWN0dWFsKTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoYnVmZmVyKSB7XG4gICAgICAgIHRoaXMuYnVmZmVyID0gYnVmZmVyO1xuICAgICAgICB0aGlzLmJ5dGVMZW5ndGggPSB0aGlzLmJ1ZmZlci5ieXRlTGVuZ3RoO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgaWYgKGhhc0J1ZmZlcikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyLnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoIXRleHREZWNvZGVyKSB7XG4gICAgICAgICAgICAgICAgdGV4dERlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0ZXh0RGVjb2Rlci5kZWNvZGUodGhpcy5idWZmZXIpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRVSW50MTZMRShzb3VyY2UsIG9mZnNldCkge1xuICAgIHJldHVybiAoKChzb3VyY2Vbb2Zmc2V0ICsgMF0gPDwgMCkgPj4+IDApIHxcbiAgICAgICAgKChzb3VyY2Vbb2Zmc2V0ICsgMV0gPDwgOCkgPj4+IDApKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZVVJbnQxNkxFKGRlc3RpbmF0aW9uLCB2YWx1ZSwgb2Zmc2V0KSB7XG4gICAgZGVzdGluYXRpb25bb2Zmc2V0ICsgMF0gPSAodmFsdWUgJiAwYjExMTExMTExKTtcbiAgICB2YWx1ZSA9IHZhbHVlID4+PiA4O1xuICAgIGRlc3RpbmF0aW9uW29mZnNldCArIDFdID0gKHZhbHVlICYgMGIxMTExMTExMSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVhZFVJbnQzMkJFKHNvdXJjZSwgb2Zmc2V0KSB7XG4gICAgcmV0dXJuIChzb3VyY2Vbb2Zmc2V0XSAqIDIgKiogMjRcbiAgICAgICAgKyBzb3VyY2Vbb2Zmc2V0ICsgMV0gKiAyICoqIDE2XG4gICAgICAgICsgc291cmNlW29mZnNldCArIDJdICogMiAqKiA4XG4gICAgICAgICsgc291cmNlW29mZnNldCArIDNdKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZVVJbnQzMkJFKGRlc3RpbmF0aW9uLCB2YWx1ZSwgb2Zmc2V0KSB7XG4gICAgZGVzdGluYXRpb25bb2Zmc2V0ICsgM10gPSB2YWx1ZTtcbiAgICB2YWx1ZSA9IHZhbHVlID4+PiA4O1xuICAgIGRlc3RpbmF0aW9uW29mZnNldCArIDJdID0gdmFsdWU7XG4gICAgdmFsdWUgPSB2YWx1ZSA+Pj4gODtcbiAgICBkZXN0aW5hdGlvbltvZmZzZXQgKyAxXSA9IHZhbHVlO1xuICAgIHZhbHVlID0gdmFsdWUgPj4+IDg7XG4gICAgZGVzdGluYXRpb25bb2Zmc2V0XSA9IHZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRVSW50OChzb3VyY2UsIG9mZnNldCkge1xuICAgIHJldHVybiBzb3VyY2Vbb2Zmc2V0XTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3cml0ZVVJbnQ4KGRlc3RpbmF0aW9uLCB2YWx1ZSwgb2Zmc2V0KSB7XG4gICAgZGVzdGluYXRpb25bb2Zmc2V0XSA9IHZhbHVlO1xufVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAqICBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqICBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQgeyBWU0J1ZmZlciB9IGZyb20gJy4uLy4uLy4uL2Jhc2UvY29tbW9uL2J1ZmZlci5qcyc7XG5pbXBvcnQgKiBhcyBwbGF0Zm9ybSBmcm9tICcuLi8uLi8uLi9iYXNlL2NvbW1vbi9wbGF0Zm9ybS5qcyc7XG5mdW5jdGlvbiByZXZlcnNlRW5kaWFubmVzcyhhcnIpIHtcbiAgICBmb3IgKGxldCBpID0gMCwgbGVuID0gYXJyLmxlbmd0aDsgaSA8IGxlbjsgaSArPSA0KSB7XG4gICAgICAgIC8vIGZsaXAgYnl0ZXMgMDwtPjMgYW5kIDE8LT4yXG4gICAgICAgIGNvbnN0IGIwID0gYXJyW2kgKyAwXTtcbiAgICAgICAgY29uc3QgYjEgPSBhcnJbaSArIDFdO1xuICAgICAgICBjb25zdCBiMiA9IGFycltpICsgMl07XG4gICAgICAgIGNvbnN0IGIzID0gYXJyW2kgKyAzXTtcbiAgICAgICAgYXJyW2kgKyAwXSA9IGIzO1xuICAgICAgICBhcnJbaSArIDFdID0gYjI7XG4gICAgICAgIGFycltpICsgMl0gPSBiMTtcbiAgICAgICAgYXJyW2kgKyAzXSA9IGIwO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHRvTGl0dGxlRW5kaWFuQnVmZmVyKGFycikge1xuICAgIGNvbnN0IHVpbnQ4QXJyID0gbmV3IFVpbnQ4QXJyYXkoYXJyLmJ1ZmZlciwgYXJyLmJ5dGVPZmZzZXQsIGFyci5sZW5ndGggKiA0KTtcbiAgICBpZiAoIXBsYXRmb3JtLmlzTGl0dGxlRW5kaWFuKCkpIHtcbiAgICAgICAgLy8gdGhlIGJ5dGUgb3JkZXIgbXVzdCBiZSBjaGFuZ2VkXG4gICAgICAgIHJldmVyc2VFbmRpYW5uZXNzKHVpbnQ4QXJyKTtcbiAgICB9XG4gICAgcmV0dXJuIFZTQnVmZmVyLndyYXAodWludDhBcnIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVNlbWFudGljVG9rZW5zRHRvKHNlbWFudGljVG9rZW5zKSB7XG4gICAgY29uc3QgZGVzdCA9IG5ldyBVaW50MzJBcnJheShlbmNvZGVTZW1hbnRpY1Rva2Vuc0R0b1NpemUoc2VtYW50aWNUb2tlbnMpKTtcbiAgICBsZXQgb2Zmc2V0ID0gMDtcbiAgICBkZXN0W29mZnNldCsrXSA9IHNlbWFudGljVG9rZW5zLmlkO1xuICAgIGlmIChzZW1hbnRpY1Rva2Vucy50eXBlID09PSAnZnVsbCcpIHtcbiAgICAgICAgZGVzdFtvZmZzZXQrK10gPSAxIC8qIEVuY29kZWRTZW1hbnRpY1Rva2Vuc1R5cGUuRnVsbCAqLztcbiAgICAgICAgZGVzdFtvZmZzZXQrK10gPSBzZW1hbnRpY1Rva2Vucy5kYXRhLmxlbmd0aDtcbiAgICAgICAgZGVzdC5zZXQoc2VtYW50aWNUb2tlbnMuZGF0YSwgb2Zmc2V0KTtcbiAgICAgICAgb2Zmc2V0ICs9IHNlbWFudGljVG9rZW5zLmRhdGEubGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZGVzdFtvZmZzZXQrK10gPSAyIC8qIEVuY29kZWRTZW1hbnRpY1Rva2Vuc1R5cGUuRGVsdGEgKi87XG4gICAgICAgIGRlc3Rbb2Zmc2V0KytdID0gc2VtYW50aWNUb2tlbnMuZGVsdGFzLmxlbmd0aDtcbiAgICAgICAgZm9yIChjb25zdCBkZWx0YSBvZiBzZW1hbnRpY1Rva2Vucy5kZWx0YXMpIHtcbiAgICAgICAgICAgIGRlc3Rbb2Zmc2V0KytdID0gZGVsdGEuc3RhcnQ7XG4gICAgICAgICAgICBkZXN0W29mZnNldCsrXSA9IGRlbHRhLmRlbGV0ZUNvdW50O1xuICAgICAgICAgICAgaWYgKGRlbHRhLmRhdGEpIHtcbiAgICAgICAgICAgICAgICBkZXN0W29mZnNldCsrXSA9IGRlbHRhLmRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgICAgIGRlc3Quc2V0KGRlbHRhLmRhdGEsIG9mZnNldCk7XG4gICAgICAgICAgICAgICAgb2Zmc2V0ICs9IGRlbHRhLmRhdGEubGVuZ3RoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZGVzdFtvZmZzZXQrK10gPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0b0xpdHRsZUVuZGlhbkJ1ZmZlcihkZXN0KTtcbn1cbmZ1bmN0aW9uIGVuY29kZVNlbWFudGljVG9rZW5zRHRvU2l6ZShzZW1hbnRpY1Rva2Vucykge1xuICAgIGxldCByZXN1bHQgPSAwO1xuICAgIHJlc3VsdCArPSAoKzEgLy8gaWRcbiAgICAgICAgKyAxIC8vIHR5cGVcbiAgICApO1xuICAgIGlmIChzZW1hbnRpY1Rva2Vucy50eXBlID09PSAnZnVsbCcpIHtcbiAgICAgICAgcmVzdWx0ICs9ICgrMSAvLyBkYXRhIGxlbmd0aFxuICAgICAgICAgICAgKyBzZW1hbnRpY1Rva2Vucy5kYXRhLmxlbmd0aCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXN1bHQgKz0gKCsxIC8vIGRlbHRhIGNvdW50XG4gICAgICAgICk7XG4gICAgICAgIHJlc3VsdCArPSAoKzEgLy8gc3RhcnRcbiAgICAgICAgICAgICsgMSAvLyBkZWxldGVDb3VudFxuICAgICAgICAgICAgKyAxIC8vIGRhdGEgbGVuZ3RoXG4gICAgICAgICkgKiBzZW1hbnRpY1Rva2Vucy5kZWx0YXMubGVuZ3RoO1xuICAgICAgICBmb3IgKGNvbnN0IGRlbHRhIG9mIHNlbWFudGljVG9rZW5zLmRlbHRhcykge1xuICAgICAgICAgICAgaWYgKGRlbHRhLmRhdGEpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gZGVsdGEuZGF0YS5sZW5ndGg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6WyJoYXNCdWZmZXIiLCJCdWZmZXIiLCJ0ZXh0RGVjb2RlciIsIlVpbnQ4QXJyYXkiLCJWU0J1ZmZlciIsIndyYXAiLCJhY3R1YWwiLCJpc0J1ZmZlciIsImZyb20iLCJidWZmZXIiLCJieXRlT2Zmc2V0IiwiYnl0ZUxlbmd0aCIsImNvbnN0cnVjdG9yIiwidGhpcyIsInRvU3RyaW5nIiwiVGV4dERlY29kZXIiLCJkZWNvZGUiLCJyZWFkVUludDE2TEUiLCJzb3VyY2UiLCJvZmZzZXQiLCJ3cml0ZVVJbnQxNkxFIiwiZGVzdGluYXRpb24iLCJ2YWx1ZSIsInJlYWRVSW50MzJCRSIsIndyaXRlVUludDMyQkUiLCJyZWFkVUludDgiLCJ3cml0ZVVJbnQ4IiwiZW5jb2RlU2VtYW50aWNUb2tlbnNEdG8iLCJzZW1hbnRpY1Rva2VucyIsImRlc3QiLCJVaW50MzJBcnJheSIsInJlc3VsdCIsInR5cGUiLCJkYXRhIiwibGVuZ3RoIiwiZGVsdGFzIiwiZGVsdGEiLCJlbmNvZGVTZW1hbnRpY1Rva2Vuc0R0b1NpemUiLCJpZCIsInNldCIsInN0YXJ0IiwiZGVsZXRlQ291bnQiLCJhcnIiLCJ1aW50OEFyciIsImkiLCJsZW4iLCJiMCIsImIxIiwiYjIiLCJiMyIsInJldmVyc2VFbmRpYW5uZXNzIiwidG9MaXR0bGVFbmRpYW5CdWZmZXIiXSwic291cmNlUm9vdCI6IiJ9