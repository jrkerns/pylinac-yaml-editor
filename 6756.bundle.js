"use strict";(self.webpackChunkpylinac_yaml_editor=self.webpackChunkpylinac_yaml_editor||[]).push([[6756,2603],{2603:(e,t,r)=>{r.r(t),r.d(t,{DraggedTreeItemsIdentifier:()=>i,TreeViewsDnDService:()=>n});class n{constructor(){this._dragOperations=new Map}removeDragOperationTransfer(e){if(e&&this._dragOperations.has(e)){const t=this._dragOperations.get(e);return this._dragOperations.delete(e),t}}}class i{constructor(e){this.identifier=e}}},6756:(e,t,r)=>{r.r(t),r.d(t,{ITreeViewsDnDService:()=>c});var n=r(6726),i=r(2399),s=r(2603);const c=(0,i.u1)("treeViewsDndService");(0,n.v)(c,s.TreeViewsDnDService,1)},3312:(e,t,r)=>{r.d(t,{d:()=>n});class n{constructor(e,t=[],r=!1){this.ctor=e,this.staticArguments=t,this.supportsDelayedInstantiation=r}}},6726:(e,t,r)=>{r.d(t,{N:()=>c,v:()=>s});var n=r(3312);const i=[];function s(e,t,r){t instanceof n.d||(t=new n.d(t,[],Boolean(r))),i.push([e,t])}function c(){return i}},2399:(e,t,r)=>{var n;r.d(t,{_$:()=>n,_Y:()=>i,u1:()=>s}),function(e){e.serviceIds=new Map,e.DI_TARGET="$di$target",e.DI_DEPENDENCIES="$di$dependencies",e.getServiceDependencies=function(t){return t[e.DI_DEPENDENCIES]||[]}}(n||(n={}));const i=s("instantiationService");function s(e){if(n.serviceIds.has(e))return n.serviceIds.get(e);const t=function(e,r,i){if(3!==arguments.length)throw new Error("@IServiceName-decorator can only be used to decorate a parameter");!function(e,t,r){t[n.DI_TARGET]===t?t[n.DI_DEPENDENCIES].push({id:e,index:r}):(t[n.DI_DEPENDENCIES]=[{id:e,index:r}],t[n.DI_TARGET]=t)}(t,e,i)};return t.toString=()=>e,n.serviceIds.set(e,t),t}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,