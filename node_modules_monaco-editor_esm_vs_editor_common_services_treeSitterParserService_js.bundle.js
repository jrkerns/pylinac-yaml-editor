"use strict";
(self["webpackChunkpylinac_yaml_editor"] = self["webpackChunkpylinac_yaml_editor"] || []).push([["node_modules_monaco-editor_esm_vs_editor_common_services_treeSitterParserService_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/editor/common/services/treeSitterParserService.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/editor/common/services/treeSitterParserService.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ITreeSitterParserService: () => (/* binding */ ITreeSitterParserService)
/* harmony export */ });
/* harmony import */ var _platform_instantiation_common_instantiation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../platform/instantiation/common/instantiation.js */ "./node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js");

const ITreeSitterParserService = (0,_platform_instantiation_common_instantiation_js__WEBPACK_IMPORTED_MODULE_0__.createDecorator)('treeSitterParserService');


/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IInstantiationService: () => (/* binding */ IInstantiationService),
/* harmony export */   _util: () => (/* binding */ _util),
/* harmony export */   createDecorator: () => (/* binding */ createDecorator)
/* harmony export */ });
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// ------ internal util
var _util;
(function (_util) {
    _util.serviceIds = new Map();
    _util.DI_TARGET = '$di$target';
    _util.DI_DEPENDENCIES = '$di$dependencies';
    function getServiceDependencies(ctor) {
        return ctor[_util.DI_DEPENDENCIES] || [];
    }
    _util.getServiceDependencies = getServiceDependencies;
})(_util || (_util = {}));
const IInstantiationService = createDecorator('instantiationService');
function storeServiceDependency(id, target, index) {
    if (target[_util.DI_TARGET] === target) {
        target[_util.DI_DEPENDENCIES].push({ id, index });
    }
    else {
        target[_util.DI_DEPENDENCIES] = [{ id, index }];
        target[_util.DI_TARGET] = target;
    }
}
/**
 * The *only* valid way to create a {{ServiceIdentifier}}.
 */
function createDecorator(serviceId) {
    if (_util.serviceIds.has(serviceId)) {
        return _util.serviceIds.get(serviceId);
    }
    const id = function (target, key, index) {
        if (arguments.length !== 3) {
            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');
        }
        storeServiceDependency(id, target, index);
    };
    id.toString = () => serviceId;
    _util.serviceIds.set(serviceId, id);
    return id;
}


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX21vbmFjby1lZGl0b3JfZXNtX3ZzX2VkaXRvcl9jb21tb25fc2VydmljZXNfdHJlZVNpdHRlclBhcnNlclNlcnZpY2VfanMuYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQTBGO0FBQ25GLGlDQUFpQyxnR0FBZTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNEdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0JBQXNCO0FBQ2hCO0FBQ1A7QUFDQTtBQUNBLDZDQUE2QyxXQUFXO0FBQ3hEO0FBQ0E7QUFDQSwyQ0FBMkMsV0FBVztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxtQkFBbUI7QUFDekQ7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHlsaW5hYy15YW1sLWVkaXRvci8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9lZGl0b3IvY29tbW9uL3NlcnZpY2VzL3RyZWVTaXR0ZXJQYXJzZXJTZXJ2aWNlLmpzIiwid2VicGFjazovL3B5bGluYWMteWFtbC1lZGl0b3IvLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvcGxhdGZvcm0vaW5zdGFudGlhdGlvbi9jb21tb24vaW5zdGFudGlhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVEZWNvcmF0b3IgfSBmcm9tICcuLi8uLi8uLi9wbGF0Zm9ybS9pbnN0YW50aWF0aW9uL2NvbW1vbi9pbnN0YW50aWF0aW9uLmpzJztcbmV4cG9ydCBjb25zdCBJVHJlZVNpdHRlclBhcnNlclNlcnZpY2UgPSBjcmVhdGVEZWNvcmF0b3IoJ3RyZWVTaXR0ZXJQYXJzZXJTZXJ2aWNlJyk7XG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuICogIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8vIC0tLS0tLSBpbnRlcm5hbCB1dGlsXG5leHBvcnQgdmFyIF91dGlsO1xuKGZ1bmN0aW9uIChfdXRpbCkge1xuICAgIF91dGlsLnNlcnZpY2VJZHMgPSBuZXcgTWFwKCk7XG4gICAgX3V0aWwuRElfVEFSR0VUID0gJyRkaSR0YXJnZXQnO1xuICAgIF91dGlsLkRJX0RFUEVOREVOQ0lFUyA9ICckZGkkZGVwZW5kZW5jaWVzJztcbiAgICBmdW5jdGlvbiBnZXRTZXJ2aWNlRGVwZW5kZW5jaWVzKGN0b3IpIHtcbiAgICAgICAgcmV0dXJuIGN0b3JbX3V0aWwuRElfREVQRU5ERU5DSUVTXSB8fCBbXTtcbiAgICB9XG4gICAgX3V0aWwuZ2V0U2VydmljZURlcGVuZGVuY2llcyA9IGdldFNlcnZpY2VEZXBlbmRlbmNpZXM7XG59KShfdXRpbCB8fCAoX3V0aWwgPSB7fSkpO1xuZXhwb3J0IGNvbnN0IElJbnN0YW50aWF0aW9uU2VydmljZSA9IGNyZWF0ZURlY29yYXRvcignaW5zdGFudGlhdGlvblNlcnZpY2UnKTtcbmZ1bmN0aW9uIHN0b3JlU2VydmljZURlcGVuZGVuY3koaWQsIHRhcmdldCwgaW5kZXgpIHtcbiAgICBpZiAodGFyZ2V0W191dGlsLkRJX1RBUkdFVF0gPT09IHRhcmdldCkge1xuICAgICAgICB0YXJnZXRbX3V0aWwuRElfREVQRU5ERU5DSUVTXS5wdXNoKHsgaWQsIGluZGV4IH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGFyZ2V0W191dGlsLkRJX0RFUEVOREVOQ0lFU10gPSBbeyBpZCwgaW5kZXggfV07XG4gICAgICAgIHRhcmdldFtfdXRpbC5ESV9UQVJHRVRdID0gdGFyZ2V0O1xuICAgIH1cbn1cbi8qKlxuICogVGhlICpvbmx5KiB2YWxpZCB3YXkgdG8gY3JlYXRlIGEge3tTZXJ2aWNlSWRlbnRpZmllcn19LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGVjb3JhdG9yKHNlcnZpY2VJZCkge1xuICAgIGlmIChfdXRpbC5zZXJ2aWNlSWRzLmhhcyhzZXJ2aWNlSWQpKSB7XG4gICAgICAgIHJldHVybiBfdXRpbC5zZXJ2aWNlSWRzLmdldChzZXJ2aWNlSWQpO1xuICAgIH1cbiAgICBjb25zdCBpZCA9IGZ1bmN0aW9uICh0YXJnZXQsIGtleSwgaW5kZXgpIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggIT09IDMpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQElTZXJ2aWNlTmFtZS1kZWNvcmF0b3IgY2FuIG9ubHkgYmUgdXNlZCB0byBkZWNvcmF0ZSBhIHBhcmFtZXRlcicpO1xuICAgICAgICB9XG4gICAgICAgIHN0b3JlU2VydmljZURlcGVuZGVuY3koaWQsIHRhcmdldCwgaW5kZXgpO1xuICAgIH07XG4gICAgaWQudG9TdHJpbmcgPSAoKSA9PiBzZXJ2aWNlSWQ7XG4gICAgX3V0aWwuc2VydmljZUlkcy5zZXQoc2VydmljZUlkLCBpZCk7XG4gICAgcmV0dXJuIGlkO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9