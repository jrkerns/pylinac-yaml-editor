"use strict";(self.webpackChunkpylinac_yaml_editor=self.webpackChunkpylinac_yaml_editor||[]).push([[8295],{8295:(r,e,o)=>{o.d(e,{A3:()=>y,AQ:()=>P,Am:()=>A,As:()=>I,BD:()=>X,Bo:()=>Y,CM:()=>L,D0:()=>g,Ek:()=>E,H0:()=>D,I2:()=>K,IW:()=>rr,If:()=>Z,JB:()=>Q,L0:()=>s,Mf:()=>c,P1:()=>nr,Pe:()=>tr,Qt:()=>b,WD:()=>ir,WS:()=>or,WY:()=>dr,Xr:()=>S,aZ:()=>M,bB:()=>er,hz:()=>v,je:()=>u,kG:()=>a,kM:()=>l,l5:()=>N,lQ:()=>W,n4:()=>j,ob:()=>x,ow:()=>F,s7:()=>$,sC:()=>h,sH:()=>_,sN:()=>U,ss:()=>z,tK:()=>C,tp:()=>H,vP:()=>w,vV:()=>m,vp:()=>q,w4:()=>f,we:()=>k,x9:()=>O,yI:()=>J,yw:()=>G,zp:()=>V});var t=o(9746),i=o(4901),n=o(559),d=o(9044);const a=(0,n.x1A)("editor.lineHighlightBackground",null,t.kg("lineHighlight","Background color for the highlight of line at the cursor position.")),c=(0,n.x1A)("editor.lineHighlightBorder",{dark:"#282828",light:"#eeeeee",hcDark:"#f38518",hcLight:n.b1q},t.kg("lineHighlightBorderBox","Background color for the border around the line at the cursor position.")),g=((0,n.x1A)("editor.rangeHighlightBackground",{dark:"#ffffff0b",light:"#fdff0033",hcDark:null,hcLight:null},t.kg("rangeHighlight","Background color of highlighted ranges, like by quick open and find features. The color must not be opaque so as not to hide underlying decorations."),!0),(0,n.x1A)("editor.rangeHighlightBorder",{dark:null,light:null,hcDark:n.buw,hcLight:n.buw},t.kg("rangeHighlightBorder","Background color of the border around highlighted ranges.")),(0,n.x1A)("editor.symbolHighlightBackground",{dark:n.Ubg,light:n.Ubg,hcDark:null,hcLight:null},t.kg("symbolHighlight","Background color of highlighted symbol, like for go to definition or go next/previous symbol. The color must not be opaque so as not to hide underlying decorations."),!0),(0,n.x1A)("editor.symbolHighlightBorder",{dark:null,light:null,hcDark:n.buw,hcLight:n.buw},t.kg("symbolHighlightBorder","Background color of the border around highlighted symbols.")),(0,n.x1A)("editorCursor.foreground",{dark:"#AEAFAD",light:i.Q1.black,hcDark:i.Q1.white,hcLight:"#0F4A85"},t.kg("caret","Color of the editor cursor."))),l=(0,n.x1A)("editorCursor.background",null,t.kg("editorCursorBackground","The background color of the editor cursor. Allows customizing the color of a character overlapped by a block cursor.")),h=(0,n.x1A)("editorMultiCursor.primary.foreground",g,t.kg("editorMultiCursorPrimaryForeground","Color of the primary editor cursor when multiple cursors are present.")),u=(0,n.x1A)("editorMultiCursor.primary.background",l,t.kg("editorMultiCursorPrimaryBackground","The background color of the primary editor cursor when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.")),k=(0,n.x1A)("editorMultiCursor.secondary.foreground",g,t.kg("editorMultiCursorSecondaryForeground","Color of secondary editor cursors when multiple cursors are present.")),s=(0,n.x1A)("editorMultiCursor.secondary.background",l,t.kg("editorMultiCursorSecondaryBackground","The background color of secondary editor cursors when multiple cursors are present. Allows customizing the color of a character overlapped by a block cursor.")),f=(0,n.x1A)("editorWhitespace.foreground",{dark:"#e3e4e229",light:"#33333333",hcDark:"#e3e4e229",hcLight:"#CCCCCC"},t.kg("editorWhitespaces","Color of whitespace characters in the editor.")),b=(0,n.x1A)("editorLineNumber.foreground",{dark:"#858585",light:"#237893",hcDark:i.Q1.white,hcLight:"#292929"},t.kg("editorLineNumbers","Color of editor line numbers.")),p=(0,n.x1A)("editorIndentGuide.background",f,t.kg("editorIndentGuides","Color of the editor indentation guides."),!1,t.kg("deprecatedEditorIndentGuides","'editorIndentGuide.background' is deprecated. Use 'editorIndentGuide.background1' instead.")),B=(0,n.x1A)("editorIndentGuide.activeBackground",f,t.kg("editorActiveIndentGuide","Color of the active editor indentation guides."),!1,t.kg("deprecatedEditorActiveIndentGuide","'editorIndentGuide.activeBackground' is deprecated. Use 'editorIndentGuide.activeBackground1' instead.")),m=(0,n.x1A)("editorIndentGuide.background1",p,t.kg("editorIndentGuides1","Color of the editor indentation guides (1).")),x=(0,n.x1A)("editorIndentGuide.background2","#00000000",t.kg("editorIndentGuides2","Color of the editor indentation guides (2).")),v=(0,n.x1A)("editorIndentGuide.background3","#00000000",t.kg("editorIndentGuides3","Color of the editor indentation guides (3).")),F=(0,n.x1A)("editorIndentGuide.background4","#00000000",t.kg("editorIndentGuides4","Color of the editor indentation guides (4).")),w=(0,n.x1A)("editorIndentGuide.background5","#00000000",t.kg("editorIndentGuides5","Color of the editor indentation guides (5).")),L=(0,n.x1A)("editorIndentGuide.background6","#00000000",t.kg("editorIndentGuides6","Color of the editor indentation guides (6).")),D=(0,n.x1A)("editorIndentGuide.activeBackground1",B,t.kg("editorActiveIndentGuide1","Color of the active editor indentation guides (1).")),A=(0,n.x1A)("editorIndentGuide.activeBackground2","#00000000",t.kg("editorActiveIndentGuide2","Color of the active editor indentation guides (2).")),C=(0,n.x1A)("editorIndentGuide.activeBackground3","#00000000",t.kg("editorActiveIndentGuide3","Color of the active editor indentation guides (3).")),y=(0,n.x1A)("editorIndentGuide.activeBackground4","#00000000",t.kg("editorActiveIndentGuide4","Color of the active editor indentation guides (4).")),H=(0,n.x1A)("editorIndentGuide.activeBackground5","#00000000",t.kg("editorActiveIndentGuide5","Color of the active editor indentation guides (5).")),I=(0,n.x1A)("editorIndentGuide.activeBackground6","#00000000",t.kg("editorActiveIndentGuide6","Color of the active editor indentation guides (6).")),T=(0,n.x1A)("editorActiveLineNumber.foreground",{dark:"#c6c6c6",light:"#0B216F",hcDark:n.buw,hcLight:n.buw},t.kg("editorActiveLineNumber","Color of editor active line number"),!1,t.kg("deprecatedEditorActiveLineNumber","Id is deprecated. Use 'editorLineNumber.activeForeground' instead.")),Q=((0,n.x1A)("editorLineNumber.activeForeground",T,t.kg("editorActiveLineNumber","Color of editor active line number")),(0,n.x1A)("editorLineNumber.dimmedForeground",null,t.kg("editorDimmedLineNumber","Color of the final editor line when editor.renderFinalNewline is set to dimmed."))),O=((0,n.x1A)("editorRuler.foreground",{dark:"#5A5A5A",light:i.Q1.lightgrey,hcDark:i.Q1.white,hcLight:"#292929"},t.kg("editorRuler","Color of the editor rulers.")),(0,n.x1A)("editorCodeLens.foreground",{dark:"#999999",light:"#919191",hcDark:"#999999",hcLight:"#292929"},t.kg("editorCodeLensForeground","Foreground color of editor CodeLens")),(0,n.x1A)("editorBracketMatch.background",{dark:"#0064001a",light:"#0064001a",hcDark:"#0064001a",hcLight:"#0000"},t.kg("editorBracketMatchBackground","Background color behind matching brackets")),(0,n.x1A)("editorBracketMatch.border",{dark:"#888",light:"#B9B9B9",hcDark:n.b1q,hcLight:n.b1q},t.kg("editorBracketMatchBorder","Color for matching brackets boxes")),(0,n.x1A)("editorOverviewRuler.border",{dark:"#7f7f7f4d",light:"#7f7f7f4d",hcDark:"#7f7f7f4d",hcLight:"#666666"},t.kg("editorOverviewRulerBorder","Color of the overview ruler border."))),S=(0,n.x1A)("editorOverviewRuler.background",null,t.kg("editorOverviewRulerBackground","Background color of the editor overview ruler.")),G=((0,n.x1A)("editorGutter.background",n.YtV,t.kg("editorGutter","Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.")),(0,n.x1A)("editorUnnecessaryCode.border",{dark:null,light:null,hcDark:i.Q1.fromHex("#fff").transparent(.8),hcLight:n.b1q},t.kg("unnecessaryCodeBorder","Border color of unnecessary (unused) source code in the editor.")),(0,n.x1A)("editorUnnecessaryCode.opacity",{dark:i.Q1.fromHex("#000a"),light:i.Q1.fromHex("#0007"),hcDark:null,hcLight:null},t.kg("unnecessaryCodeOpacity","Opacity of unnecessary (unused) source code in the editor. For example, \"#000000c0\" will render the code with 75% opacity. For high contrast themes, use the  'editorUnnecessaryCode.border' theme color to underline unnecessary code instead of fading it out."))),E=((0,n.x1A)("editorGhostText.border",{dark:null,light:null,hcDark:i.Q1.fromHex("#fff").transparent(.8),hcLight:i.Q1.fromHex("#292929").transparent(.8)},t.kg("editorGhostTextBorder","Border color of ghost text in the editor.")),(0,n.x1A)("editorGhostText.foreground",{dark:i.Q1.fromHex("#ffffff56"),light:i.Q1.fromHex("#0007"),hcDark:null,hcLight:null},t.kg("editorGhostTextForeground","Foreground color of the ghost text in the editor."))),R=((0,n.x1A)("editorGhostText.background",null,t.kg("editorGhostTextBackground","Background color of the ghost text in the editor.")),new i.Q1(new i.bU(0,122,204,.6))),q=(0,n.x1A)("editorOverviewRuler.rangeHighlightForeground",R,t.kg("overviewRulerRangeHighlight","Overview ruler marker color for range highlights. The color must not be opaque so as not to hide underlying decorations."),!0),J=(0,n.x1A)("editorOverviewRuler.errorForeground",{dark:new i.Q1(new i.bU(255,18,18,.7)),light:new i.Q1(new i.bU(255,18,18,.7)),hcDark:new i.Q1(new i.bU(255,50,50,1)),hcLight:"#B5200D"},t.kg("overviewRuleError","Overview ruler marker color for errors.")),M=(0,n.x1A)("editorOverviewRuler.warningForeground",{dark:n.Hng,light:n.Hng,hcDark:n.Stt,hcLight:n.Stt},t.kg("overviewRuleWarning","Overview ruler marker color for warnings.")),P=(0,n.x1A)("editorOverviewRuler.infoForeground",{dark:n.pOz,light:n.pOz,hcDark:n.IIb,hcLight:n.IIb},t.kg("overviewRuleInfo","Overview ruler marker color for infos.")),U=(0,n.x1A)("editorBracketHighlight.foreground1",{dark:"#FFD700",light:"#0431FAFF",hcDark:"#FFD700",hcLight:"#0431FAFF"},t.kg("editorBracketHighlightForeground1","Foreground color of brackets (1). Requires enabling bracket pair colorization.")),W=(0,n.x1A)("editorBracketHighlight.foreground2",{dark:"#DA70D6",light:"#319331FF",hcDark:"#DA70D6",hcLight:"#319331FF"},t.kg("editorBracketHighlightForeground2","Foreground color of brackets (2). Requires enabling bracket pair colorization.")),z=(0,n.x1A)("editorBracketHighlight.foreground3",{dark:"#179FFF",light:"#7B3814FF",hcDark:"#87CEFA",hcLight:"#7B3814FF"},t.kg("editorBracketHighlightForeground3","Foreground color of brackets (3). Requires enabling bracket pair colorization.")),N=(0,n.x1A)("editorBracketHighlight.foreground4","#00000000",t.kg("editorBracketHighlightForeground4","Foreground color of brackets (4). Requires enabling bracket pair colorization.")),_=(0,n.x1A)("editorBracketHighlight.foreground5","#00000000",t.kg("editorBracketHighlightForeground5","Foreground color of brackets (5). Requires enabling bracket pair colorization.")),V=(0,n.x1A)("editorBracketHighlight.foreground6","#00000000",t.kg("editorBracketHighlightForeground6","Foreground color of brackets (6). Requires enabling bracket pair colorization.")),$=(0,n.x1A)("editorBracketHighlight.unexpectedBracket.foreground",{dark:new i.Q1(new i.bU(255,18,18,.8)),light:new i.Q1(new i.bU(255,18,18,.8)),hcDark:"new Color(new RGBA(255, 50, 50, 1))",hcLight:"#B5200D"},t.kg("editorBracketHighlightUnexpectedBracketForeground","Foreground color of unexpected brackets.")),j=(0,n.x1A)("editorBracketPairGuide.background1","#00000000",t.kg("editorBracketPairGuide.background1","Background color of inactive bracket pair guides (1). Requires enabling bracket pair guides.")),K=(0,n.x1A)("editorBracketPairGuide.background2","#00000000",t.kg("editorBracketPairGuide.background2","Background color of inactive bracket pair guides (2). Requires enabling bracket pair guides.")),Y=(0,n.x1A)("editorBracketPairGuide.background3","#00000000",t.kg("editorBracketPairGuide.background3","Background color of inactive bracket pair guides (3). Requires enabling bracket pair guides.")),Z=(0,n.x1A)("editorBracketPairGuide.background4","#00000000",t.kg("editorBracketPairGuide.background4","Background color of inactive bracket pair guides (4). Requires enabling bracket pair guides.")),X=(0,n.x1A)("editorBracketPairGuide.background5","#00000000",t.kg("editorBracketPairGuide.background5","Background color of inactive bracket pair guides (5). Requires enabling bracket pair guides.")),rr=(0,n.x1A)("editorBracketPairGuide.background6","#00000000",t.kg("editorBracketPairGuide.background6","Background color of inactive bracket pair guides (6). Requires enabling bracket pair guides.")),er=(0,n.x1A)("editorBracketPairGuide.activeBackground1","#00000000",t.kg("editorBracketPairGuide.activeBackground1","Background color of active bracket pair guides (1). Requires enabling bracket pair guides.")),or=(0,n.x1A)("editorBracketPairGuide.activeBackground2","#00000000",t.kg("editorBracketPairGuide.activeBackground2","Background color of active bracket pair guides (2). Requires enabling bracket pair guides.")),tr=(0,n.x1A)("editorBracketPairGuide.activeBackground3","#00000000",t.kg("editorBracketPairGuide.activeBackground3","Background color of active bracket pair guides (3). Requires enabling bracket pair guides.")),ir=(0,n.x1A)("editorBracketPairGuide.activeBackground4","#00000000",t.kg("editorBracketPairGuide.activeBackground4","Background color of active bracket pair guides (4). Requires enabling bracket pair guides.")),nr=(0,n.x1A)("editorBracketPairGuide.activeBackground5","#00000000",t.kg("editorBracketPairGuide.activeBackground5","Background color of active bracket pair guides (5). Requires enabling bracket pair guides.")),dr=(0,n.x1A)("editorBracketPairGuide.activeBackground6","#00000000",t.kg("editorBracketPairGuide.activeBackground6","Background color of active bracket pair guides (6). Requires enabling bracket pair guides."));(0,n.x1A)("editorUnicodeHighlight.border",n.Hng,t.kg("editorUnicodeHighlight.border","Border color used to highlight unicode characters.")),(0,n.x1A)("editorUnicodeHighlight.background",n.whs,t.kg("editorUnicodeHighlight.background","Background color used to highlight unicode characters.")),(0,d.zy)(((r,e)=>{const o=r.getColor(n.YtV),t=r.getColor(a),i=t&&!t.isTransparent()?t:o;i&&e.addRule(`.monaco-editor .inputarea.ime-input { background-color: ${i}; }`)}))},559:(r,e,o)=>{o.d(e,{FdG:()=>t.Fd,buw:()=>l,GuP:()=>t.Gu,Bbc:()=>t.Bb,HP_:()=>t.HP,WMx:()=>u,zRE:()=>k,sAS:()=>gr,vV$:()=>ar,etE:()=>cr,mc0:()=>dr,XJc:()=>Zr,raQ:()=>re,G_h:()=>Kr,T9h:()=>Xr,xOA:()=>oe,Inn:()=>ee,nZG:()=>te,Q1$:()=>Yr,OcU:()=>he,C5U:()=>ke,t0B:()=>ue,b1q:()=>g,EY1:()=>Y,ZEf:()=>Z,Gj6:()=>X,ld8:()=>er,$BZ:()=>or,GNm:()=>rr,Ztu:()=>Q,YtV:()=>m,AN$:()=>D,Rbi:()=>L,f3U:()=>R,Ubg:()=>q,ECk:()=>M,p8Y:()=>J,S5J:()=>P,By2:()=>x,i61:()=>T,WfR:()=>U,oZ8:()=>W,tan:()=>G,IIb:()=>I,pOz:()=>H,WL6:()=>N,P6i:()=>z,B2L:()=>j,sjA:()=>$,_pU:()=>V,HwT:()=>_,seu:()=>O,rm4:()=>S,QwA:()=>E,whs:()=>A,Stt:()=>y,Hng:()=>C,CgL:()=>v,sIe:()=>w,FiB:()=>F,tAP:()=>c,CU6:()=>d,t4B:()=>a,c1f:()=>Gr,uNK:()=>Or,$$0:()=>Er,L4c:()=>Ir,Zgs:()=>Qr,cws:()=>Tr,_$n:()=>Wr,eYZ:()=>Nr,h9z:()=>zr,I$A:()=>Rr,YSW:()=>Jr,L9Z:()=>qr,ULt:()=>Mr,C1n:()=>Ur,T5N:()=>Pr,HDX:()=>se,zUX:()=>be,Qfh:()=>pe,eUu:()=>fe,Rjz:()=>Fe,GVV:()=>we,fED:()=>Le,yIp:()=>Oe,Yoe:()=>Qe,pnl:()=>Ee,P9Z:()=>qe,fiM:()=>Re,H8q:()=>Je,gtq:()=>ve,VFX:()=>Be,efJ:()=>me,eMz:()=>Ge,p7Y:()=>xe,QI5:()=>Se,lO1:()=>Ie,QRv:()=>Te,CQ3:()=>ye,ijf:()=>He,uNx:()=>De,f4y:()=>Ae,C9U:()=>Ce,c6Y:()=>_e,g$2:()=>ze,dd_:()=>Ne,Ux$:()=>$e,SNb:()=>je,pmr:()=>Ve,D7X:()=>Ke,ILr:()=>yr,yLC:()=>Cr,AjU:()=>Fr,K1Z:()=>Hr,KoI:()=>Dr,yr0:()=>Lr,Xp1:()=>wr,uMG:()=>Ar,yLr:()=>t.yL,fAP:()=>pr,z5H:()=>Br,iwL:()=>eo,NBf:()=>ro,tYX:()=>mr,bNw:()=>vr,JPj:()=>xr,BTi:()=>B,ELA:()=>Ye,HJZ:()=>Ze,AlL:()=>no,nH:()=>to,c7i:()=>io,er1:()=>Xe,Ukx:()=>ne,Ips:()=>de,jOE:()=>ie,xWN:()=>ce,ZBU:()=>ge,kPT:()=>ae,jr9:()=>le,x1A:()=>t.x1,bXl:()=>s,mhZ:()=>p,gnV:()=>f,cI_:()=>b,rvE:()=>_r,HcB:()=>jr,yqq:()=>$r,lWP:()=>Vr,k5u:()=>Ue,sbQ:()=>We,vwp:()=>h,JO0:()=>t.JO,pft:()=>Pe,U4U:()=>Me,DSL:()=>ir,f9l:()=>tr});var t=o(7676),i=o(9746),n=o(4901);const d=(0,t.x1)("foreground",{dark:"#CCCCCC",light:"#616161",hcDark:"#FFFFFF",hcLight:"#292929"},i.kg("foreground","Overall foreground color. This color is only used if not overridden by a component.")),a=((0,t.x1)("disabledForeground",{dark:"#CCCCCC80",light:"#61616180",hcDark:"#A5A5A5",hcLight:"#7F7F7F"},i.kg("disabledForeground","Overall foreground for disabled elements. This color is only used if not overridden by a component.")),(0,t.x1)("errorForeground",{dark:"#F48771",light:"#A1260D",hcDark:"#F48771",hcLight:"#B5200D"},i.kg("errorForeground","Overall foreground color for error messages. This color is only used if not overridden by a component.")),(0,t.x1)("descriptionForeground",{light:"#717171",dark:(0,t.JO)(d,.7),hcDark:(0,t.JO)(d,.7),hcLight:(0,t.JO)(d,.7)},i.kg("descriptionForeground","Foreground color for description text providing additional information, for example for a label.")),(0,t.x1)("icon.foreground",{dark:"#C5C5C5",light:"#424242",hcDark:"#FFFFFF",hcLight:"#292929"},i.kg("iconForeground","The default color for icons in the workbench."))),c=(0,t.x1)("focusBorder",{dark:"#007FD4",light:"#0090F1",hcDark:"#F38518",hcLight:"#006BBD"},i.kg("focusBorder","Overall border color for focused elements. This color is only used if not overridden by a component.")),g=(0,t.x1)("contrastBorder",{light:null,dark:null,hcDark:"#6FC3DF",hcLight:"#0F4A85"},i.kg("contrastBorder","An extra border around elements to separate them from others for greater contrast.")),l=(0,t.x1)("contrastActiveBorder",{light:null,dark:null,hcDark:c,hcLight:c},i.kg("activeContrastBorder","An extra border around active elements to separate them from others for greater contrast.")),h=((0,t.x1)("selection.background",null,i.kg("selectionBackground","The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.")),(0,t.x1)("textLink.foreground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},i.kg("textLinkForeground","Foreground color for links in text."))),u=((0,t.x1)("textLink.activeForeground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},i.kg("textLinkActiveForeground","Foreground color for links in text when clicked on and on mouse hover.")),(0,t.x1)("textSeparator.foreground",{light:"#0000002e",dark:"#ffffff2e",hcDark:n.Q1.black,hcLight:"#292929"},i.kg("textSeparatorForeground","Color for text separators.")),(0,t.x1)("textPreformat.foreground",{light:"#A31515",dark:"#D7BA7D",hcDark:"#000000",hcLight:"#FFFFFF"},i.kg("textPreformatForeground","Foreground color for preformatted text segments.")),(0,t.x1)("textPreformat.background",{light:"#0000001A",dark:"#FFFFFF1A",hcDark:"#FFFFFF",hcLight:"#09345f"},i.kg("textPreformatBackground","Background color for preformatted text segments.")),(0,t.x1)("textBlockQuote.background",{light:"#f2f2f2",dark:"#222222",hcDark:null,hcLight:"#F2F2F2"},i.kg("textBlockQuoteBackground","Background color for block quotes in text.")),(0,t.x1)("textBlockQuote.border",{light:"#007acc80",dark:"#007acc80",hcDark:n.Q1.white,hcLight:"#292929"},i.kg("textBlockQuoteBorder","Border color for block quotes in text.")),(0,t.x1)("textCodeBlock.background",{light:"#dcdcdc66",dark:"#0a0a0a66",hcDark:n.Q1.black,hcLight:"#F2F2F2"},i.kg("textCodeBlockBackground","Background color for code blocks in text.")),(0,t.x1)("sash.hoverBorder",c,i.kg("sashActiveBorder","Border color of active sashes.")),(0,t.x1)("badge.background",{dark:"#4D4D4D",light:"#C4C4C4",hcDark:n.Q1.black,hcLight:"#0F4A85"},i.kg("badgeBackground","Badge background color. Badges are small information labels, e.g. for search results count."))),k=(0,t.x1)("badge.foreground",{dark:n.Q1.white,light:"#333",hcDark:n.Q1.white,hcLight:n.Q1.white},i.kg("badgeForeground","Badge foreground color. Badges are small information labels, e.g. for search results count.")),s=(0,t.x1)("scrollbar.shadow",{dark:"#000000",light:"#DDDDDD",hcDark:null,hcLight:null},i.kg("scrollbarShadow","Scrollbar shadow to indicate that the view is scrolled.")),f=(0,t.x1)("scrollbarSlider.background",{dark:n.Q1.fromHex("#797979").transparent(.4),light:n.Q1.fromHex("#646464").transparent(.4),hcDark:(0,t.JO)(g,.6),hcLight:(0,t.JO)(g,.4)},i.kg("scrollbarSliderBackground","Scrollbar slider background color.")),b=(0,t.x1)("scrollbarSlider.hoverBackground",{dark:n.Q1.fromHex("#646464").transparent(.7),light:n.Q1.fromHex("#646464").transparent(.7),hcDark:(0,t.JO)(g,.8),hcLight:(0,t.JO)(g,.8)},i.kg("scrollbarSliderHoverBackground","Scrollbar slider background color when hovering.")),p=(0,t.x1)("scrollbarSlider.activeBackground",{dark:n.Q1.fromHex("#BFBFBF").transparent(.4),light:n.Q1.fromHex("#000000").transparent(.6),hcDark:g,hcLight:g},i.kg("scrollbarSliderActiveBackground","Scrollbar slider background color when clicked on.")),B=(0,t.x1)("progressBar.background",{dark:n.Q1.fromHex("#0E70C0"),light:n.Q1.fromHex("#0E70C0"),hcDark:g,hcLight:g},i.kg("progressBarBackground","Background color of the progress bar that can show for long running operations.")),m=(0,t.x1)("editor.background",{light:"#ffffff",dark:"#1E1E1E",hcDark:n.Q1.black,hcLight:n.Q1.white},i.kg("editorBackground","Editor background color.")),x=(0,t.x1)("editor.foreground",{light:"#333333",dark:"#BBBBBB",hcDark:n.Q1.white,hcLight:d},i.kg("editorForeground","Editor default foreground color.")),v=((0,t.x1)("editorStickyScroll.background",m,i.kg("editorStickyScrollBackground","Background color of sticky scroll in the editor")),(0,t.x1)("editorStickyScrollHover.background",{dark:"#2A2D2E",light:"#F0F0F0",hcDark:null,hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},i.kg("editorStickyScrollHoverBackground","Background color of sticky scroll on hover in the editor")),(0,t.x1)("editorStickyScroll.border",{dark:null,light:null,hcDark:g,hcLight:g},i.kg("editorStickyScrollBorder","Border color of sticky scroll in the editor")),(0,t.x1)("editorStickyScroll.shadow",s,i.kg("editorStickyScrollShadow"," Shadow color of sticky scroll in the editor")),(0,t.x1)("editorWidget.background",{dark:"#252526",light:"#F3F3F3",hcDark:"#0C141F",hcLight:n.Q1.white},i.kg("editorWidgetBackground","Background color of editor widgets, such as find/replace."))),F=(0,t.x1)("editorWidget.foreground",d,i.kg("editorWidgetForeground","Foreground color of editor widgets, such as find/replace.")),w=(0,t.x1)("editorWidget.border",{dark:"#454545",light:"#C8C8C8",hcDark:g,hcLight:g},i.kg("editorWidgetBorder","Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.")),L=((0,t.x1)("editorWidget.resizeBorder",null,i.kg("editorWidgetResizeBorder","Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.")),(0,t.x1)("editorError.background",null,i.kg("editorError.background","Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),(0,t.x1)("editorError.foreground",{dark:"#F14C4C",light:"#E51400",hcDark:"#F48771",hcLight:"#B5200D"},i.kg("editorError.foreground","Foreground color of error squigglies in the editor."))),D=(0,t.x1)("editorError.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#E47777").transparent(.8),hcLight:"#B5200D"},i.kg("errorBorder","If set, color of double underlines for errors in the editor.")),A=(0,t.x1)("editorWarning.background",null,i.kg("editorWarning.background","Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),C=(0,t.x1)("editorWarning.foreground",{dark:"#CCA700",light:"#BF8803",hcDark:"#FFD370",hcLight:"#895503"},i.kg("editorWarning.foreground","Foreground color of warning squigglies in the editor.")),y=(0,t.x1)("editorWarning.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#FFCC00").transparent(.8),hcLight:n.Q1.fromHex("#FFCC00").transparent(.8)},i.kg("warningBorder","If set, color of double underlines for warnings in the editor.")),H=((0,t.x1)("editorInfo.background",null,i.kg("editorInfo.background","Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),(0,t.x1)("editorInfo.foreground",{dark:"#3794FF",light:"#1a85ff",hcDark:"#3794FF",hcLight:"#1a85ff"},i.kg("editorInfo.foreground","Foreground color of info squigglies in the editor."))),I=(0,t.x1)("editorInfo.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#3794FF").transparent(.8),hcLight:"#292929"},i.kg("infoBorder","If set, color of double underlines for infos in the editor.")),T=(0,t.x1)("editorHint.foreground",{dark:n.Q1.fromHex("#eeeeee").transparent(.7),light:"#6c6c6c",hcDark:null,hcLight:null},i.kg("editorHint.foreground","Foreground color of hint squigglies in the editor.")),Q=((0,t.x1)("editorHint.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#eeeeee").transparent(.8),hcLight:"#292929"},i.kg("hintBorder","If set, color of double underlines for hints in the editor.")),(0,t.x1)("editorLink.activeForeground",{dark:"#4E94CE",light:n.Q1.blue,hcDark:n.Q1.cyan,hcLight:"#292929"},i.kg("activeLinkForeground","Color of active links."))),O=(0,t.x1)("editor.selectionBackground",{light:"#ADD6FF",dark:"#264F78",hcDark:"#f3f518",hcLight:"#0F4A85"},i.kg("editorSelectionBackground","Color of the editor selection.")),S=(0,t.x1)("editor.selectionForeground",{light:null,dark:null,hcDark:"#000000",hcLight:n.Q1.white},i.kg("editorSelectionForeground","Color of the selected text for high contrast.")),G=(0,t.x1)("editor.inactiveSelectionBackground",{light:(0,t.JO)(O,.5),dark:(0,t.JO)(O,.5),hcDark:(0,t.JO)(O,.7),hcLight:(0,t.JO)(O,.5)},i.kg("editorInactiveSelection","Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations."),!0),E=(0,t.x1)("editor.selectionHighlightBackground",{light:(0,t.oG)(O,m,.3,.6),dark:(0,t.oG)(O,m,.3,.6),hcDark:null,hcLight:null},i.kg("editorSelectionHighlight","Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations."),!0),R=((0,t.x1)("editor.selectionHighlightBorder",{light:null,dark:null,hcDark:l,hcLight:l},i.kg("editorSelectionHighlightBorder","Border color for regions with the same content as the selection.")),(0,t.x1)("editor.findMatchBackground",{light:"#A8AC94",dark:"#515C6A",hcDark:null,hcLight:null},i.kg("editorFindMatch","Color of the current search match.")),(0,t.x1)("editor.findMatchForeground",null,i.kg("editorFindMatchForeground","Text color of the current search match."))),q=(0,t.x1)("editor.findMatchHighlightBackground",{light:"#EA5C0055",dark:"#EA5C0055",hcDark:null,hcLight:null},i.kg("findMatchHighlight","Color of the other search matches. The color must not be opaque so as not to hide underlying decorations."),!0),J=(0,t.x1)("editor.findMatchHighlightForeground",null,i.kg("findMatchHighlightForeground","Foreground color of the other search matches."),!0),M=((0,t.x1)("editor.findRangeHighlightBackground",{dark:"#3a3d4166",light:"#b4b4b44d",hcDark:null,hcLight:null},i.kg("findRangeHighlight","Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0),(0,t.x1)("editor.findMatchBorder",{light:null,dark:null,hcDark:l,hcLight:l},i.kg("editorFindMatchBorder","Border color of the current search match.")),(0,t.x1)("editor.findMatchHighlightBorder",{light:null,dark:null,hcDark:l,hcLight:l},i.kg("findMatchHighlightBorder","Border color of the other search matches."))),P=(0,t.x1)("editor.findRangeHighlightBorder",{dark:null,light:null,hcDark:(0,t.JO)(l,.4),hcLight:(0,t.JO)(l,.4)},i.kg("findRangeHighlightBorder","Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0),U=((0,t.x1)("editor.hoverHighlightBackground",{light:"#ADD6FF26",dark:"#264f7840",hcDark:"#ADD6FF26",hcLight:null},i.kg("hoverHighlight","Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations."),!0),(0,t.x1)("editorHoverWidget.background",v,i.kg("hoverBackground","Background color of the editor hover."))),W=((0,t.x1)("editorHoverWidget.foreground",F,i.kg("hoverForeground","Foreground color of the editor hover.")),(0,t.x1)("editorHoverWidget.border",w,i.kg("hoverBorder","Border color of the editor hover."))),z=((0,t.x1)("editorHoverWidget.statusBarBackground",{dark:(0,t.a)(U,.2),light:(0,t.e$)(U,.05),hcDark:v,hcLight:v},i.kg("statusBarBackground","Background color of the editor hover status bar.")),(0,t.x1)("editorInlayHint.foreground",{dark:"#969696",light:"#969696",hcDark:n.Q1.white,hcLight:n.Q1.black},i.kg("editorInlayHintForeground","Foreground color of inline hints"))),N=(0,t.x1)("editorInlayHint.background",{dark:(0,t.JO)(u,.1),light:(0,t.JO)(u,.1),hcDark:(0,t.JO)(n.Q1.white,.1),hcLight:(0,t.JO)(u,.1)},i.kg("editorInlayHintBackground","Background color of inline hints")),_=(0,t.x1)("editorInlayHint.typeForeground",z,i.kg("editorInlayHintForegroundTypes","Foreground color of inline hints for types")),V=(0,t.x1)("editorInlayHint.typeBackground",N,i.kg("editorInlayHintBackgroundTypes","Background color of inline hints for types")),$=(0,t.x1)("editorInlayHint.parameterForeground",z,i.kg("editorInlayHintForegroundParameter","Foreground color of inline hints for parameters")),j=(0,t.x1)("editorInlayHint.parameterBackground",N,i.kg("editorInlayHintBackgroundParameter","Background color of inline hints for parameters")),K=(0,t.x1)("editorLightBulb.foreground",{dark:"#FFCC00",light:"#DDB100",hcDark:"#FFCC00",hcLight:"#007ACC"},i.kg("editorLightBulbForeground","The color used for the lightbulb actions icon.")),Y=((0,t.x1)("editorLightBulbAutoFix.foreground",{dark:"#75BEFF",light:"#007ACC",hcDark:"#75BEFF",hcLight:"#007ACC"},i.kg("editorLightBulbAutoFixForeground","The color used for the lightbulb auto fix actions icon.")),(0,t.x1)("editorLightBulbAi.foreground",K,i.kg("editorLightBulbAiForeground","The color used for the lightbulb AI icon.")),(0,t.x1)("editor.snippetTabstopHighlightBackground",{dark:new n.Q1(new n.bU(124,124,124,.3)),light:new n.Q1(new n.bU(10,50,100,.2)),hcDark:new n.Q1(new n.bU(124,124,124,.3)),hcLight:new n.Q1(new n.bU(10,50,100,.2))},i.kg("snippetTabstopHighlightBackground","Highlight background color of a snippet tabstop.")),(0,t.x1)("editor.snippetTabstopHighlightBorder",null,i.kg("snippetTabstopHighlightBorder","Highlight border color of a snippet tabstop.")),(0,t.x1)("editor.snippetFinalTabstopHighlightBackground",null,i.kg("snippetFinalTabstopHighlightBackground","Highlight background color of the final tabstop of a snippet.")),(0,t.x1)("editor.snippetFinalTabstopHighlightBorder",{dark:"#525252",light:new n.Q1(new n.bU(10,50,100,.5)),hcDark:"#525252",hcLight:"#292929"},i.kg("snippetFinalTabstopHighlightBorder","Highlight border color of the final tabstop of a snippet.")),new n.Q1(new n.bU(155,185,85,.2))),Z=new n.Q1(new n.bU(255,0,0,.2)),X=(0,t.x1)("diffEditor.insertedTextBackground",{dark:"#9ccc2c33",light:"#9ccc2c40",hcDark:null,hcLight:null},i.kg("diffEditorInserted","Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),rr=(0,t.x1)("diffEditor.removedTextBackground",{dark:"#ff000033",light:"#ff000033",hcDark:null,hcLight:null},i.kg("diffEditorRemoved","Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations."),!0),er=((0,t.x1)("diffEditor.insertedLineBackground",{dark:Y,light:Y,hcDark:null,hcLight:null},i.kg("diffEditorInsertedLines","Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),(0,t.x1)("diffEditor.removedLineBackground",{dark:Z,light:Z,hcDark:null,hcLight:null},i.kg("diffEditorRemovedLines","Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations."),!0),(0,t.x1)("diffEditorGutter.insertedLineBackground",null,i.kg("diffEditorInsertedLineGutter","Background color for the margin where lines got inserted.")),(0,t.x1)("diffEditorGutter.removedLineBackground",null,i.kg("diffEditorRemovedLineGutter","Background color for the margin where lines got removed.")),(0,t.x1)("diffEditorOverview.insertedForeground",null,i.kg("diffEditorOverviewInserted","Diff overview ruler foreground for inserted content."))),or=(0,t.x1)("diffEditorOverview.removedForeground",null,i.kg("diffEditorOverviewRemoved","Diff overview ruler foreground for removed content.")),tr=((0,t.x1)("diffEditor.insertedTextBorder",{dark:null,light:null,hcDark:"#33ff2eff",hcLight:"#374E06"},i.kg("diffEditorInsertedOutline","Outline color for the text that got inserted.")),(0,t.x1)("diffEditor.removedTextBorder",{dark:null,light:null,hcDark:"#FF008F",hcLight:"#AD0707"},i.kg("diffEditorRemovedOutline","Outline color for text that got removed.")),(0,t.x1)("diffEditor.border",{dark:null,light:null,hcDark:g,hcLight:g},i.kg("diffEditorBorder","Border color between the two text editors.")),(0,t.x1)("diffEditor.diagonalFill",{dark:"#cccccc33",light:"#22222233",hcDark:null,hcLight:null},i.kg("diffDiagonalFill","Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.")),(0,t.x1)("diffEditor.unchangedRegionBackground","sideBar.background",i.kg("diffEditor.unchangedRegionBackground","The background color of unchanged blocks in the diff editor.")),(0,t.x1)("diffEditor.unchangedRegionForeground","foreground",i.kg("diffEditor.unchangedRegionForeground","The foreground color of unchanged blocks in the diff editor.")),(0,t.x1)("diffEditor.unchangedCodeBackground",{dark:"#74747429",light:"#b8b8b829",hcDark:null,hcLight:null},i.kg("diffEditor.unchangedCodeBackground","The background color of unchanged code in the diff editor.")),(0,t.x1)("widget.shadow",{dark:(0,t.JO)(n.Q1.black,.36),light:(0,t.JO)(n.Q1.black,.16),hcDark:null,hcLight:null},i.kg("widgetShadow","Shadow color of widgets such as find/replace inside the editor."))),ir=(0,t.x1)("widget.border",{dark:null,light:null,hcDark:g,hcLight:g},i.kg("widgetBorder","Border color of widgets such as find/replace inside the editor.")),nr=(0,t.x1)("toolbar.hoverBackground",{dark:"#5a5d5e50",light:"#b8b8b850",hcDark:null,hcLight:null},i.kg("toolbarHoverBackground","Toolbar background when hovering over actions using the mouse")),dr=((0,t.x1)("toolbar.hoverOutline",{dark:null,light:null,hcDark:l,hcLight:l},i.kg("toolbarHoverOutline","Toolbar outline when hovering over actions using the mouse")),(0,t.x1)("toolbar.activeBackground",{dark:(0,t.a)(nr,.1),light:(0,t.e$)(nr,.1),hcDark:null,hcLight:null},i.kg("toolbarActiveBackground","Toolbar background when holding the mouse over actions")),(0,t.x1)("breadcrumb.foreground",(0,t.JO)(d,.8),i.kg("breadcrumbsFocusForeground","Color of focused breadcrumb items."))),ar=(0,t.x1)("breadcrumb.background",m,i.kg("breadcrumbsBackground","Background color of breadcrumb items.")),cr=(0,t.x1)("breadcrumb.focusForeground",{light:(0,t.e$)(d,.2),dark:(0,t.a)(d,.1),hcDark:(0,t.a)(d,.1),hcLight:(0,t.a)(d,.1)},i.kg("breadcrumbsFocusForeground","Color of focused breadcrumb items.")),gr=(0,t.x1)("breadcrumb.activeSelectionForeground",{light:(0,t.e$)(d,.2),dark:(0,t.a)(d,.1),hcDark:(0,t.a)(d,.1),hcLight:(0,t.a)(d,.1)},i.kg("breadcrumbsSelectedForeground","Color of selected breadcrumb items.")),lr=((0,t.x1)("breadcrumbPicker.background",v,i.kg("breadcrumbsSelectedBackground","Background color of breadcrumb item picker.")),n.Q1.fromHex("#40C8AE").transparent(.5)),hr=n.Q1.fromHex("#40A6FF").transparent(.5),ur=n.Q1.fromHex("#606060").transparent(.4),kr=(0,t.x1)("merge.currentHeaderBackground",{dark:lr,light:lr,hcDark:null,hcLight:null},i.kg("mergeCurrentHeaderBackground","Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),sr=((0,t.x1)("merge.currentContentBackground",(0,t.JO)(kr,.4),i.kg("mergeCurrentContentBackground","Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),(0,t.x1)("merge.incomingHeaderBackground",{dark:hr,light:hr,hcDark:null,hcLight:null},i.kg("mergeIncomingHeaderBackground","Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0)),fr=((0,t.x1)("merge.incomingContentBackground",(0,t.JO)(sr,.4),i.kg("mergeIncomingContentBackground","Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),(0,t.x1)("merge.commonHeaderBackground",{dark:ur,light:ur,hcDark:null,hcLight:null},i.kg("mergeCommonHeaderBackground","Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0)),br=((0,t.x1)("merge.commonContentBackground",(0,t.JO)(fr,.4),i.kg("mergeCommonContentBackground","Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),(0,t.x1)("merge.border",{dark:null,light:null,hcDark:"#C3DF6F",hcLight:"#007ACC"},i.kg("mergeBorder","Border color on headers and the splitter in inline merge-conflicts."))),pr=((0,t.x1)("editorOverviewRuler.currentContentForeground",{dark:(0,t.JO)(kr,1),light:(0,t.JO)(kr,1),hcDark:br,hcLight:br},i.kg("overviewRulerCurrentContentForeground","Current overview ruler foreground for inline merge-conflicts.")),(0,t.x1)("editorOverviewRuler.incomingContentForeground",{dark:(0,t.JO)(sr,1),light:(0,t.JO)(sr,1),hcDark:br,hcLight:br},i.kg("overviewRulerIncomingContentForeground","Incoming overview ruler foreground for inline merge-conflicts.")),(0,t.x1)("editorOverviewRuler.commonContentForeground",{dark:(0,t.JO)(fr,1),light:(0,t.JO)(fr,1),hcDark:br,hcLight:br},i.kg("overviewRulerCommonContentForeground","Common ancestor overview ruler foreground for inline merge-conflicts.")),(0,t.x1)("editorOverviewRuler.findMatchForeground",{dark:"#d186167e",light:"#d186167e",hcDark:"#AB5A00",hcLight:"#AB5A00"},i.kg("overviewRulerFindMatchForeground","Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations."),!0)),Br=(0,t.x1)("editorOverviewRuler.selectionHighlightForeground","#A0A0A0CC",i.kg("overviewRulerSelectionHighlightForeground","Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations."),!0),mr=(0,t.x1)("problemsErrorIcon.foreground",L,i.kg("problemsErrorIconForeground","The color used for the problems error icon.")),xr=(0,t.x1)("problemsWarningIcon.foreground",C,i.kg("problemsWarningIconForeground","The color used for the problems warning icon.")),vr=(0,t.x1)("problemsInfoIcon.foreground",H,i.kg("problemsInfoIconForeground","The color used for the problems info icon.")),Fr=(0,t.x1)("minimap.findMatchHighlight",{light:"#d18616",dark:"#d18616",hcDark:"#AB5A00",hcLight:"#0F4A85"},i.kg("minimapFindMatchHighlight","Minimap marker color for find matches."),!0),wr=(0,t.x1)("minimap.selectionOccurrenceHighlight",{light:"#c9c9c9",dark:"#676767",hcDark:"#ffffff",hcLight:"#0F4A85"},i.kg("minimapSelectionOccurrenceHighlight","Minimap marker color for repeating editor selections."),!0),Lr=(0,t.x1)("minimap.selectionHighlight",{light:"#ADD6FF",dark:"#264F78",hcDark:"#ffffff",hcLight:"#0F4A85"},i.kg("minimapSelectionHighlight","Minimap marker color for the editor selection."),!0),Dr=(0,t.x1)("minimap.infoHighlight",{dark:H,light:H,hcDark:I,hcLight:I},i.kg("minimapInfo","Minimap marker color for infos.")),Ar=(0,t.x1)("minimap.warningHighlight",{dark:C,light:C,hcDark:y,hcLight:y},i.kg("overviewRuleWarning","Minimap marker color for warnings.")),Cr=(0,t.x1)("minimap.errorHighlight",{dark:new n.Q1(new n.bU(255,18,18,.7)),light:new n.Q1(new n.bU(255,18,18,.7)),hcDark:new n.Q1(new n.bU(255,50,50,1)),hcLight:"#B5200D"},i.kg("minimapError","Minimap marker color for errors.")),yr=(0,t.x1)("minimap.background",null,i.kg("minimapBackground","Minimap background color.")),Hr=(0,t.x1)("minimap.foregroundOpacity",n.Q1.fromHex("#000f"),i.kg("minimapForegroundOpacity",'Opacity of foreground elements rendered in the minimap. For example, "#000000c0" will render the elements with 75% opacity.')),Ir=((0,t.x1)("minimapSlider.background",(0,t.JO)(f,.5),i.kg("minimapSliderBackground","Minimap slider background color.")),(0,t.x1)("minimapSlider.hoverBackground",(0,t.JO)(b,.5),i.kg("minimapSliderHoverBackground","Minimap slider background color when hovering.")),(0,t.x1)("minimapSlider.activeBackground",(0,t.JO)(p,.5),i.kg("minimapSliderActiveBackground","Minimap slider background color when clicked on.")),(0,t.x1)("charts.foreground",d,i.kg("chartsForeground","The foreground color used in charts.")),(0,t.x1)("charts.lines",(0,t.JO)(d,.5),i.kg("chartsLines","The color used for horizontal lines in charts.")),(0,t.x1)("charts.red",L,i.kg("chartsRed","The red color used in chart visualizations.")),(0,t.x1)("charts.blue",H,i.kg("chartsBlue","The blue color used in chart visualizations.")),(0,t.x1)("charts.yellow",C,i.kg("chartsYellow","The yellow color used in chart visualizations.")),(0,t.x1)("charts.orange",Fr,i.kg("chartsOrange","The orange color used in chart visualizations.")),(0,t.x1)("charts.green",{dark:"#89D185",light:"#388A34",hcDark:"#89D185",hcLight:"#374e06"},i.kg("chartsGreen","The green color used in chart visualizations.")),(0,t.x1)("charts.purple",{dark:"#B180D7",light:"#652D90",hcDark:"#B180D7",hcLight:"#652D90"},i.kg("chartsPurple","The purple color used in chart visualizations.")),(0,t.x1)("input.background",{dark:"#3C3C3C",light:n.Q1.white,hcDark:n.Q1.black,hcLight:n.Q1.white},i.kg("inputBoxBackground","Input box background."))),Tr=(0,t.x1)("input.foreground",d,i.kg("inputBoxForeground","Input box foreground.")),Qr=(0,t.x1)("input.border",{dark:null,light:null,hcDark:g,hcLight:g},i.kg("inputBoxBorder","Input box border.")),Or=(0,t.x1)("inputOption.activeBorder",{dark:"#007ACC",light:"#007ACC",hcDark:g,hcLight:g},i.kg("inputBoxActiveOptionBorder","Border color of activated options in input fields.")),Sr=(0,t.x1)("inputOption.hoverBackground",{dark:"#5a5d5e80",light:"#b8b8b850",hcDark:null,hcLight:null},i.kg("inputOption.hoverBackground","Background color of activated options in input fields.")),Gr=(0,t.x1)("inputOption.activeBackground",{dark:(0,t.JO)(c,.4),light:(0,t.JO)(c,.2),hcDark:n.Q1.transparent,hcLight:n.Q1.transparent},i.kg("inputOption.activeBackground","Background hover color of options in input fields.")),Er=(0,t.x1)("inputOption.activeForeground",{dark:n.Q1.white,light:n.Q1.black,hcDark:d,hcLight:d},i.kg("inputOption.activeForeground","Foreground color of activated options in input fields.")),Rr=((0,t.x1)("input.placeholderForeground",{light:(0,t.JO)(d,.5),dark:(0,t.JO)(d,.5),hcDark:(0,t.JO)(d,.7),hcLight:(0,t.JO)(d,.7)},i.kg("inputPlaceholderForeground","Input box foreground color for placeholder text.")),(0,t.x1)("inputValidation.infoBackground",{dark:"#063B49",light:"#D6ECF2",hcDark:n.Q1.black,hcLight:n.Q1.white},i.kg("inputValidationInfoBackground","Input validation background color for information severity."))),qr=(0,t.x1)("inputValidation.infoForeground",{dark:null,light:null,hcDark:null,hcLight:d},i.kg("inputValidationInfoForeground","Input validation foreground color for information severity.")),Jr=(0,t.x1)("inputValidation.infoBorder",{dark:"#007acc",light:"#007acc",hcDark:g,hcLight:g},i.kg("inputValidationInfoBorder","Input validation border color for information severity.")),Mr=(0,t.x1)("inputValidation.warningBackground",{dark:"#352A05",light:"#F6F5D2",hcDark:n.Q1.black,hcLight:n.Q1.white},i.kg("inputValidationWarningBackground","Input validation background color for warning severity.")),Pr=(0,t.x1)("inputValidation.warningForeground",{dark:null,light:null,hcDark:null,hcLight:d},i.kg("inputValidationWarningForeground","Input validation foreground color for warning severity.")),Ur=(0,t.x1)("inputValidation.warningBorder",{dark:"#B89500",light:"#B89500",hcDark:g,hcLight:g},i.kg("inputValidationWarningBorder","Input validation border color for warning severity.")),Wr=(0,t.x1)("inputValidation.errorBackground",{dark:"#5A1D1D",light:"#F2DEDE",hcDark:n.Q1.black,hcLight:n.Q1.white},i.kg("inputValidationErrorBackground","Input validation background color for error severity.")),zr=(0,t.x1)("inputValidation.errorForeground",{dark:null,light:null,hcDark:null,hcLight:d},i.kg("inputValidationErrorForeground","Input validation foreground color for error severity.")),Nr=(0,t.x1)("inputValidation.errorBorder",{dark:"#BE1100",light:"#BE1100",hcDark:g,hcLight:g},i.kg("inputValidationErrorBorder","Input validation border color for error severity.")),_r=(0,t.x1)("dropdown.background",{dark:"#3C3C3C",light:n.Q1.white,hcDark:n.Q1.black,hcLight:n.Q1.white},i.kg("dropdownBackground","Dropdown background.")),Vr=(0,t.x1)("dropdown.listBackground",{dark:null,light:null,hcDark:n.Q1.black,hcLight:n.Q1.white},i.kg("dropdownListBackground","Dropdown list background.")),$r=(0,t.x1)("dropdown.foreground",{dark:"#F0F0F0",light:d,hcDark:n.Q1.white,hcLight:d},i.kg("dropdownForeground","Dropdown foreground.")),jr=(0,t.x1)("dropdown.border",{dark:_r,light:"#CECECE",hcDark:g,hcLight:g},i.kg("dropdownBorder","Dropdown border.")),Kr=(0,t.x1)("button.foreground",n.Q1.white,i.kg("buttonForeground","Button foreground color.")),Yr=(0,t.x1)("button.separator",(0,t.JO)(Kr,.4),i.kg("buttonSeparator","Button separator color.")),Zr=(0,t.x1)("button.background",{dark:"#0E639C",light:"#007ACC",hcDark:null,hcLight:"#0F4A85"},i.kg("buttonBackground","Button background color.")),Xr=(0,t.x1)("button.hoverBackground",{dark:(0,t.a)(Zr,.2),light:(0,t.e$)(Zr,.2),hcDark:Zr,hcLight:Zr},i.kg("buttonHoverBackground","Button background color when hovering.")),re=(0,t.x1)("button.border",g,i.kg("buttonBorder","Button border color.")),ee=(0,t.x1)("button.secondaryForeground",{dark:n.Q1.white,light:n.Q1.white,hcDark:n.Q1.white,hcLight:d},i.kg("buttonSecondaryForeground","Secondary button foreground color.")),oe=(0,t.x1)("button.secondaryBackground",{dark:"#3A3D41",light:"#5F6A79",hcDark:null,hcLight:n.Q1.white},i.kg("buttonSecondaryBackground","Secondary button background color.")),te=(0,t.x1)("button.secondaryHoverBackground",{dark:(0,t.a)(oe,.2),light:(0,t.e$)(oe,.2),hcDark:null,hcLight:null},i.kg("buttonSecondaryHoverBackground","Secondary button background color when hovering.")),ie=(0,t.x1)("radio.activeForeground",Er,i.kg("radioActiveForeground","Foreground color of active radio option.")),ne=(0,t.x1)("radio.activeBackground",Gr,i.kg("radioBackground","Background color of active radio option.")),de=(0,t.x1)("radio.activeBorder",Or,i.kg("radioActiveBorder","Border color of the active radio option.")),ae=(0,t.x1)("radio.inactiveForeground",null,i.kg("radioInactiveForeground","Foreground color of inactive radio option.")),ce=(0,t.x1)("radio.inactiveBackground",null,i.kg("radioInactiveBackground","Background color of inactive radio option.")),ge=(0,t.x1)("radio.inactiveBorder",{light:(0,t.JO)(ie,.2),dark:(0,t.JO)(ie,.2),hcDark:(0,t.JO)(ie,.4),hcLight:(0,t.JO)(ie,.2)},i.kg("radioInactiveBorder","Border color of the inactive radio option.")),le=(0,t.x1)("radio.inactiveHoverBackground",Sr,i.kg("radioHoverBackground","Background color of inactive active radio option when hovering.")),he=(0,t.x1)("checkbox.background",_r,i.kg("checkbox.background","Background color of checkbox widget.")),ue=((0,t.x1)("checkbox.selectBackground",v,i.kg("checkbox.select.background","Background color of checkbox widget when the element it's in is selected.")),(0,t.x1)("checkbox.foreground",$r,i.kg("checkbox.foreground","Foreground color of checkbox widget."))),ke=(0,t.x1)("checkbox.border",jr,i.kg("checkbox.border","Border color of checkbox widget.")),se=((0,t.x1)("checkbox.selectBorder",a,i.kg("checkbox.select.border","Border color of checkbox widget when the element it's in is selected.")),(0,t.x1)("keybindingLabel.background",{dark:new n.Q1(new n.bU(128,128,128,.17)),light:new n.Q1(new n.bU(221,221,221,.4)),hcDark:n.Q1.transparent,hcLight:n.Q1.transparent},i.kg("keybindingLabelBackground","Keybinding label background color. The keybinding label is used to represent a keyboard shortcut."))),fe=(0,t.x1)("keybindingLabel.foreground",{dark:n.Q1.fromHex("#CCCCCC"),light:n.Q1.fromHex("#555555"),hcDark:n.Q1.white,hcLight:d},i.kg("keybindingLabelForeground","Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.")),be=(0,t.x1)("keybindingLabel.border",{dark:new n.Q1(new n.bU(51,51,51,.6)),light:new n.Q1(new n.bU(204,204,204,.4)),hcDark:new n.Q1(new n.bU(111,195,223)),hcLight:g},i.kg("keybindingLabelBorder","Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.")),pe=(0,t.x1)("keybindingLabel.bottomBorder",{dark:new n.Q1(new n.bU(68,68,68,.6)),light:new n.Q1(new n.bU(187,187,187,.4)),hcDark:new n.Q1(new n.bU(111,195,223)),hcLight:d},i.kg("keybindingLabelBottomBorder","Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.")),Be=(0,t.x1)("list.focusBackground",null,i.kg("listFocusBackground","List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),me=(0,t.x1)("list.focusForeground",null,i.kg("listFocusForeground","List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),xe=(0,t.x1)("list.focusOutline",{dark:c,light:c,hcDark:l,hcLight:l},i.kg("listFocusOutline","List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),ve=(0,t.x1)("list.focusAndSelectionOutline",null,i.kg("listFocusAndSelectionOutline","List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.")),Fe=(0,t.x1)("list.activeSelectionBackground",{dark:"#04395E",light:"#0060C0",hcDark:null,hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},i.kg("listActiveSelectionBackground","List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),we=(0,t.x1)("list.activeSelectionForeground",{dark:n.Q1.white,light:n.Q1.white,hcDark:null,hcLight:null},i.kg("listActiveSelectionForeground","List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),Le=(0,t.x1)("list.activeSelectionIconForeground",null,i.kg("listActiveSelectionIconForeground","List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),De=(0,t.x1)("list.inactiveSelectionBackground",{dark:"#37373D",light:"#E4E6F1",hcDark:null,hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},i.kg("listInactiveSelectionBackground","List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),Ae=(0,t.x1)("list.inactiveSelectionForeground",null,i.kg("listInactiveSelectionForeground","List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),Ce=(0,t.x1)("list.inactiveSelectionIconForeground",null,i.kg("listInactiveSelectionIconForeground","List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),ye=(0,t.x1)("list.inactiveFocusBackground",null,i.kg("listInactiveFocusBackground","List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),He=(0,t.x1)("list.inactiveFocusOutline",null,i.kg("listInactiveFocusOutline","List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),Ie=(0,t.x1)("list.hoverBackground",{dark:"#2A2D2E",light:"#F0F0F0",hcDark:n.Q1.white.transparent(.1),hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},i.kg("listHoverBackground","List/Tree background when hovering over items using the mouse.")),Te=(0,t.x1)("list.hoverForeground",null,i.kg("listHoverForeground","List/Tree foreground when hovering over items using the mouse.")),Qe=(0,t.x1)("list.dropBackground",{dark:"#062F4A",light:"#D6EBFF",hcDark:null,hcLight:null},i.kg("listDropBackground","List/Tree drag and drop background when moving items over other items when using the mouse.")),Oe=(0,t.x1)("list.dropBetweenBackground",{dark:a,light:a,hcDark:null,hcLight:null},i.kg("listDropBetweenBackground","List/Tree drag and drop border color when moving items between items when using the mouse.")),Se=(0,t.x1)("list.highlightForeground",{dark:"#2AAAFF",light:"#0066BF",hcDark:c,hcLight:c},i.kg("highlight","List/Tree foreground color of the match highlights when searching inside the list/tree.")),Ge=(0,t.x1)("list.focusHighlightForeground",{dark:Se,light:(0,t.Hz)(Fe,Se,"#BBE7FF"),hcDark:Se,hcLight:Se},i.kg("listFocusHighlightForeground","List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.")),Ee=((0,t.x1)("list.invalidItemForeground",{dark:"#B89500",light:"#B89500",hcDark:"#B89500",hcLight:"#B5200D"},i.kg("invalidItemForeground","List/Tree foreground color for invalid items, for example an unresolved root in explorer.")),(0,t.x1)("list.errorForeground",{dark:"#F88070",light:"#B01011",hcDark:null,hcLight:null},i.kg("listErrorForeground","Foreground color of list items containing errors.")),(0,t.x1)("list.warningForeground",{dark:"#CCA700",light:"#855F00",hcDark:null,hcLight:null},i.kg("listWarningForeground","Foreground color of list items containing warnings.")),(0,t.x1)("listFilterWidget.background",{light:(0,t.e$)(v,0),dark:(0,t.a)(v,0),hcDark:v,hcLight:v},i.kg("listFilterWidgetBackground","Background color of the type filter widget in lists and trees."))),Re=(0,t.x1)("listFilterWidget.outline",{dark:n.Q1.transparent,light:n.Q1.transparent,hcDark:"#f38518",hcLight:"#007ACC"},i.kg("listFilterWidgetOutline","Outline color of the type filter widget in lists and trees.")),qe=(0,t.x1)("listFilterWidget.noMatchesOutline",{dark:"#BE1100",light:"#BE1100",hcDark:g,hcLight:g},i.kg("listFilterWidgetNoMatchesOutline","Outline color of the type filter widget in lists and trees, when there are no matches.")),Je=(0,t.x1)("listFilterWidget.shadow",tr,i.kg("listFilterWidgetShadow","Shadow color of the type filter widget in lists and trees.")),Me=((0,t.x1)("list.filterMatchBackground",{dark:q,light:q,hcDark:null,hcLight:null},i.kg("listFilterMatchHighlight","Background color of the filtered match.")),(0,t.x1)("list.filterMatchBorder",{dark:M,light:M,hcDark:g,hcLight:l},i.kg("listFilterMatchHighlightBorder","Border color of the filtered match.")),(0,t.x1)("list.deemphasizedForeground",{dark:"#8C8C8C",light:"#8E8E90",hcDark:"#A7A8A9",hcLight:"#666666"},i.kg("listDeemphasizedForeground","List/Tree foreground color for items that are deemphasized.")),(0,t.x1)("tree.indentGuidesStroke",{dark:"#585858",light:"#a9a9a9",hcDark:"#a9a9a9",hcLight:"#a5a5a5"},i.kg("treeIndentGuidesStroke","Tree stroke color for the indentation guides."))),Pe=(0,t.x1)("tree.inactiveIndentGuidesStroke",(0,t.JO)(Me,.4),i.kg("treeInactiveIndentGuidesStroke","Tree stroke color for the indentation guides that are not active.")),Ue=(0,t.x1)("tree.tableColumnsBorder",{dark:"#CCCCCC20",light:"#61616120",hcDark:null,hcLight:null},i.kg("tableColumnsBorder","Table border color between columns.")),We=(0,t.x1)("tree.tableOddRowsBackground",{dark:(0,t.JO)(d,.04),light:(0,t.JO)(d,.04),hcDark:null,hcLight:null},i.kg("tableOddRowsBackgroundColor","Background color for odd table rows.")),ze=((0,t.x1)("editorActionList.background",v,i.kg("editorActionListBackground","Action List background color.")),(0,t.x1)("editorActionList.foreground",F,i.kg("editorActionListForeground","Action List foreground color.")),(0,t.x1)("editorActionList.focusForeground",we,i.kg("editorActionListFocusForeground","Action List foreground color for the focused item.")),(0,t.x1)("editorActionList.focusBackground",Fe,i.kg("editorActionListFocusBackground","Action List background color for the focused item.")),(0,t.x1)("menu.border",{dark:null,light:null,hcDark:g,hcLight:g},i.kg("menuBorder","Border color of menus."))),Ne=(0,t.x1)("menu.foreground",$r,i.kg("menuForeground","Foreground color of menu items.")),_e=(0,t.x1)("menu.background",_r,i.kg("menuBackground","Background color of menu items.")),Ve=(0,t.x1)("menu.selectionForeground",we,i.kg("menuSelectionForeground","Foreground color of the selected menu item in menus.")),$e=(0,t.x1)("menu.selectionBackground",Fe,i.kg("menuSelectionBackground","Background color of the selected menu item in menus.")),je=(0,t.x1)("menu.selectionBorder",{dark:null,light:null,hcDark:l,hcLight:l},i.kg("menuSelectionBorder","Border color of the selected menu item in menus.")),Ke=(0,t.x1)("menu.separatorBackground",{dark:"#606060",light:"#D4D4D4",hcDark:g,hcLight:g},i.kg("menuSeparatorBackground","Color of a separator menu item in menus.")),Ye=(0,t.x1)("quickInput.background",v,i.kg("pickerBackground","Quick picker background color. The quick picker widget is the container for pickers like the command palette.")),Ze=(0,t.x1)("quickInput.foreground",F,i.kg("pickerForeground","Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.")),Xe=(0,t.x1)("quickInputTitle.background",{dark:new n.Q1(new n.bU(255,255,255,.105)),light:new n.Q1(new n.bU(0,0,0,.06)),hcDark:"#000000",hcLight:n.Q1.white},i.kg("pickerTitleBackground","Quick picker title background color. The quick picker widget is the container for pickers like the command palette.")),ro=(0,t.x1)("pickerGroup.foreground",{dark:"#3794FF",light:"#0066BF",hcDark:n.Q1.white,hcLight:"#0F4A85"},i.kg("pickerGroupForeground","Quick picker color for grouping labels.")),eo=(0,t.x1)("pickerGroup.border",{dark:"#3F3F46",light:"#CCCEDB",hcDark:n.Q1.white,hcLight:"#0F4A85"},i.kg("pickerGroupBorder","Quick picker color for grouping borders.")),oo=(0,t.x1)("quickInput.list.focusBackground",null,"",void 0,i.kg("quickInput.list.focusBackground deprecation","Please use quickInputList.focusBackground instead")),to=(0,t.x1)("quickInputList.focusForeground",we,i.kg("quickInput.listFocusForeground","Quick picker foreground color for the focused item.")),io=(0,t.x1)("quickInputList.focusIconForeground",Le,i.kg("quickInput.listFocusIconForeground","Quick picker icon foreground color for the focused item.")),no=(0,t.x1)("quickInputList.focusBackground",{dark:(0,t.yL)(oo,Fe),light:(0,t.yL)(oo,Fe),hcDark:null,hcLight:null},i.kg("quickInput.listFocusBackground","Quick picker background color for the focused item."));(0,t.x1)("search.resultsInfoForeground",{light:d,dark:(0,t.JO)(d,.65),hcDark:d,hcLight:d},i.kg("search.resultsInfoForeground","Color of the text in the search viewlet's completion message.")),(0,t.x1)("searchEditor.findMatchBackground",{light:(0,t.JO)(q,.66),dark:(0,t.JO)(q,.66),hcDark:q,hcLight:q},i.kg("searchEditor.queryMatch","Color of the Search Editor query matches.")),(0,t.x1)("searchEditor.findMatchBorder",{light:(0,t.JO)(M,.66),dark:(0,t.JO)(M,.66),hcDark:M,hcLight:M},i.kg("searchEditor.editorFindMatchBorder","Border color of the Search Editor query matches."))},7676:(r,e,o)=>{o.d(e,{Bb:()=>l,Fd:()=>k,Gu:()=>h,HP:()=>u,Hz:()=>x,JO:()=>B,a:()=>p,e$:()=>b,oG:()=>v,x1:()=>f,yL:()=>m});var t=o(7110),i=o(5958),n=o(4901),d=o(2106),a=o(1460),c=o(7167),g=o(9746);function l(r){return`--vscode-${r.replace(/\./g,"-")}`}function h(r){return`var(${l(r)})`}function u(r,e){return`var(${l(r)}, ${e})`}const k={ColorContribution:"base.contributions.colors"},s=new class{constructor(){this._onDidChangeSchema=new d.vl,this.onDidChangeSchema=this._onDidChangeSchema.event,this.colorSchema={type:"object",properties:{}},this.colorReferenceSchema={type:"string",enum:[],enumDescriptions:[]},this.colorsById={}}registerColor(r,e,o,t=!1,i){const n={id:r,description:o,defaults:e,needsTransparency:t,deprecationMessage:i};this.colorsById[r]=n;const d={type:"string",format:"color-hex",defaultSnippets:[{body:"${1:#ff0000}"}]};return i&&(d.deprecationMessage=i),t&&(d.pattern="^#(?:(?<rgba>[0-9a-fA-f]{3}[0-9a-eA-E])|(?:[0-9a-fA-F]{6}(?:(?![fF]{2})(?:[0-9a-fA-F]{2}))))?$",d.patternErrorMessage=g.kg("transparecyRequired","This color must be transparent or it will obscure content")),this.colorSchema.properties[r]={description:o,oneOf:[d,{type:"string",const:"default",description:g.kg("useDefault","Use the default color.")}]},this.colorReferenceSchema.enum.push(r),this.colorReferenceSchema.enumDescriptions.push(o),this._onDidChangeSchema.fire(),r}getColors(){return Object.keys(this.colorsById).map((r=>this.colorsById[r]))}resolveDefaultColor(r,e){const o=this.colorsById[r];if(o?.defaults)return F(null!==(t=o.defaults)&&"object"==typeof t&&"light"in t&&"dark"in t?o.defaults[e.type]:o.defaults,e);var t}getColorSchema(){return this.colorSchema}toString(){return Object.keys(this.colorsById).sort(((r,e)=>{const o=-1===r.indexOf(".")?0:1,t=-1===e.indexOf(".")?0:1;return o!==t?o-t:r.localeCompare(e)})).map((r=>`- \`${r}\`: ${this.colorsById[r].description}`)).join("\n")}};function f(r,e,o,t,i){return s.registerColor(r,e,o,t,i)}function b(r,e){return{op:0,value:r,factor:e}}function p(r,e){return{op:1,value:r,factor:e}}function B(r,e){return{op:2,value:r,factor:e}}function m(...r){return{op:4,values:r}}function x(r,e,o){return{op:6,if:r,then:e,else:o}}function v(r,e,o,t){return{op:5,value:r,background:e,factor:o,transparency:t}}function F(r,e){if(null!==r)return"string"==typeof r?"#"===r[0]?n.Q1.fromHex(r):e.getColor(r):r instanceof n.Q1?r:"object"==typeof r?function(r,e){switch(r.op){case 0:return F(r.value,e)?.darken(r.factor);case 1:return F(r.value,e)?.lighten(r.factor);case 2:return F(r.value,e)?.transparent(r.factor);case 3:{const o=F(r.background,e);return o?F(r.value,e)?.makeOpaque(o):F(r.value,e)}case 4:for(const o of r.values){const r=F(o,e);if(r)return r}return;case 6:return F(e.defines(r.if)?r.then:r.else,e);case 5:{const o=F(r.value,e);if(!o)return;const t=F(r.background,e);return t?o.isDarkerThan(t)?n.Q1.getLighterColor(o,t,r.factor).transparent(r.transparency):n.Q1.getDarkerColor(o,t,r.factor).transparent(r.transparency):o.transparent(r.factor*r.transparency)}default:throw(0,t.xb)(r)}}(r,e):void 0}c.O.add(k.ColorContribution,s);const w="vscode://schemas/workbench-colors",L=c.O.as(a.F.JSONContribution);L.registerSchema(w,s.getColorSchema());const D=new i.uC((()=>L.notifySchemaChanged(w)),200);s.onDidChangeSchema((()=>{D.isScheduled()||D.schedule()}))},9563:(r,e,o)=>{var t;function i(r){return r===t.HIGH_CONTRAST_DARK||r===t.HIGH_CONTRAST_LIGHT}function n(r){return r===t.DARK||r===t.HIGH_CONTRAST_DARK}o.d(e,{Bb:()=>i,HD:()=>n,zM:()=>t}),function(r){r.DARK="dark",r.LIGHT="light",r.HIGH_CONTRAST_DARK="hcDark",r.HIGH_CONTRAST_LIGHT="hcLight"}(t||(t={}))},9044:(r,e,o)=>{o.d(e,{Fd:()=>h,Gy:()=>c,Pz:()=>l,Yf:()=>g,lR:()=>s,zy:()=>k});var t=o(2106),i=o(998),n=o(2399),d=o(7167),a=o(9563);const c=(0,n.u1)("themeService");function g(r){return{id:r}}function l(r){switch(r){case a.zM.DARK:return"vs-dark";case a.zM.HIGH_CONTRAST_DARK:return"hc-black";case a.zM.HIGH_CONTRAST_LIGHT:return"hc-light";default:return"vs"}}const h={ThemingContribution:"base.contributions.theming"},u=new class{constructor(){this.themingParticipants=[],this.themingParticipants=[],this.onThemingParticipantAddedEmitter=new t.vl}onColorThemeChange(r){return this.themingParticipants.push(r),this.onThemingParticipantAddedEmitter.fire(r),(0,i.s)((()=>{const e=this.themingParticipants.indexOf(r);this.themingParticipants.splice(e,1)}))}getThemingParticipants(){return this.themingParticipants}};function k(r){return u.onColorThemeChange(r)}d.O.add(h.ThemingContribution,u);class s extends i.jG{constructor(r){super(),this.themeService=r,this.theme=r.getColorTheme(),this._register(this.themeService.onDidColorThemeChange((r=>this.onThemeChange(r))))}onThemeChange(r){this.theme=r,this.updateStyles()}updateStyles(){}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,